import random

from aiogram import F, Router
from aiogram.types import CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton

import data
from keyboards import to_carousel_keyboard
from models.users import get_user_data, increment_discount, update_user_data
from tools import add_user_answer, carousel_render, hide_buttons

third_level_router: Router = Router()


# Third level
@third_level_router.callback_query(F.data == "third_level_intro")
async def third_level_intro(callback_query: CallbackQuery):
    await hide_buttons(callback_query=callback_query)
    await update_user_data(user_id=callback_query.message.chat.id, lvl_2_ans={})

    next_button = await to_carousel_keyboard(level_num="third")

    text = (
        "üéÆ –û—Ç–ª–∏—á–Ω–æ! –¢—ã –ø—Ä–æ—à–µ–ª –≤—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å –∏ —Ç–µ–ø–µ—Ä—å –≥–æ—Ç–æ–≤ –∫ –±–æ–Ω—É—Å–Ω–æ–º—É —É—Ä–æ–≤–Ω—é, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å "
        "–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –¥–∏–∑–∞–π–Ω–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂."
    )
    await callback_query.message.answer(
        text=text,
        reply_markup=next_button.as_markup(resize_keyboard=True),
        parse_mode="HTML",
    )


# Third level information carousel
@third_level_router.callback_query(F.data.startswith("third_level_carousel"))
async def third_level_carousel(callback_query: CallbackQuery):
    await carousel_render(callback_query=callback_query, level_num="third")


# Third level continue
@third_level_router.callback_query(F.data == "third_level_continue")
async def third_level_continue(callback_query: CallbackQuery):
    await hide_buttons(callback_query=callback_query)

    buttons = InlineKeyboardBuilder()
    buttons.add(
        InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ", callback_data="third_level_task"),
        InlineKeyboardButton(
            text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±–æ–Ω—É—Å–æ–≤", callback_data="end_point_intro"
        ),
    )
    buttons.adjust(1)

    text = "–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –∑–∞–∫—Ä–µ–ø–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."

    await callback_query.message.answer(
        text=text, reply_markup=buttons.as_markup(resize_keyboard=True)
    )


# Third level task
@third_level_router.callback_query(F.data == "third_level_task")
async def second_level_task_info(callback_query: CallbackQuery):
    await hide_buttons(callback_query=callback_query)

    user = await get_user_data(user_id=callback_query.message.chat.id)
    if user:
        await update_user_data(user_id=user.user_id, lvl_3_ans={})

    task_text = (
        "–ó–∞–¥–∞–Ω–∏–µ: –≤—ã–±–µ—Ä–∏ –≤–µ—Ä–Ω–æ–µ –ª–∏ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –Ω–µ—Ç. "
        "–ë–æ–Ω—É—Å –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è: —Å–∫–∏–¥–∫–∞ <b>+ 10%</b>"
    )

    button = InlineKeyboardBuilder()
    button.add(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥", callback_data="third_solution_"))

    await callback_query.message.answer(
        text=task_text,
        reply_markup=button.as_markup(reply_keyboard=True),
        parse_mode="HTML",
    )


@third_level_router.callback_query(F.data.startswith("third_solution_"))
async def third_level_solution(callback_query: CallbackQuery):
    correct_results = await data.get_third_level_answers()
    user = await get_user_data(user_id=callback_query.message.chat.id)
    user_answers = user.lvl_3_ans

    current_answer = callback_query.data.split("_")[2]
    if current_answer != "":
        user_answers.update({callback_query.message.text: current_answer})
        await update_user_data(user_id=user.user_id, lvl_3_ans=user_answers)

        for key in user_answers.keys():
            correct_results.pop(key)

        await add_user_answer(
            callback_query=callback_query, current_answer=current_answer
        )
    else:
        await hide_buttons(callback_query=callback_query)

    if len(correct_results) != 0:
        answers_keyboard = InlineKeyboardBuilder()
        answers_keyboard.add(
            InlineKeyboardButton(text="–í–µ—Ä–Ω–æ", callback_data="third_solution_–í–µ—Ä–Ω–æ"),
            InlineKeyboardButton(
                text="–ù–µ–≤–µ—Ä–Ω–æ", callback_data="third_solution_–ù–µ–≤–µ—Ä–Ω–æ"
            ),
        )
        answers_keyboard.adjust(2)

        answer, text = random.sample(list(correct_results.items()), 1)[0]

        await callback_query.message.answer(
            text=answer, reply_markup=answers_keyboard.as_markup(resize_keyboard=True)
        )
    else:
        await third_level_check_result(callback_query=callback_query)


# Third level result checking
async def third_level_check_result(callback_query: CallbackQuery):
    origin_results = await data.get_third_level_answers()
    user = await get_user_data(user_id=callback_query.message.chat.id)

    if user.lvl_3_ans == origin_results:
        await increment_discount(user_id=callback_query.message.chat.id)

        text = (
            "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–¥–æ–ª–µ–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–æ–≤–Ω–µ–π –Ω–∞—à–µ–π –∏–≥—Ä—ã –∏ —É–∑–Ω–∞–ª, –∫–∞–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω –º–æ–∂–µ—Ç "
            "–ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞."
        )

        buttons = InlineKeyboardBuilder()
        buttons.add(
            InlineKeyboardButton(text="–ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", callback_data="end_point_intro"),
        )

        await update_user_data(user_id=user.user_id, lvl_3_ans={})
        await callback_query.message.answer(
            text=text, reply_markup=buttons.as_markup(resize_keyboard=True)
        )
    else:
        buttons = InlineKeyboardBuilder()
        buttons.add(
            InlineKeyboardButton(
                text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="third_level_task"
            ),
            InlineKeyboardButton(
                text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±–æ–Ω—É—Å–∞", callback_data="end_point_intro"
            ),
        )
        buttons.adjust(1)

        text = (
            "–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–µ–≤–µ—Ä–Ω–æ. –¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–æ–π—Ç–∏ –∑–∞–¥–∞–Ω–∏–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±–æ–Ω—É—Å–∞. "
            "–í—ã–±–∏—Ä–∞–π:"
        )

        await callback_query.message.answer(
            text=text, reply_markup=buttons.as_markup(resize_keyboard=True)
        )

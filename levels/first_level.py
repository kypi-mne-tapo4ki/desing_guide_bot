from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardBuilder

import data
from models.users import update_user_data, increment_discount
from tools import hide_buttons, carousel_render
from keyboards import to_carousel_keyboard, cancel_game_keyboard

first_level_router: Router = Router()


# First level
@first_level_router.callback_query(F.data == "first_level")
async def first_level_intro(callback_query: CallbackQuery):
    # Hide inline button from previous message
    await hide_buttons(callback_query=callback_query)

    next_button = await to_carousel_keyboard(level="first_level")

    level_text = "üí° –£—Ä–æ–≤–µ–Ω—å 1: –ó–∞—á–µ–º –Ω—É–∂–µ–Ω –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω? –ë–æ–Ω—É—Å –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: —Å–∫–∏–¥–∫–∞ 10%"
    cancel_game_button = await cancel_game_keyboard()

    await callback_query.message.answer(
        text=level_text,
        reply_markup=cancel_game_button.as_markup(resize_keyboard=True)
    )

    next_text = " –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–µ—Ä–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É, –¥–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è, –ø–æ—á–µ–º—É –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω —Ç–∞–∫ –≤–∞–∂–µ–Ω:"
    await callback_query.message.answer(
        text=next_text,
        reply_markup=next_button.as_markup(resize_keyboard=True),
    )


# First level information carousel
@first_level_router.callback_query(F.data.startswith("first_level_carousel"))
async def first_level_carousel(callback_query: CallbackQuery):
    level = callback_query.data[:callback_query.data.find("level") + 5]

    await carousel_render(callback_query=callback_query, level=level)


# First level continue
@first_level_router.callback_query(F.data == "first_level_continue")
async def first_level_continue(callback_query: CallbackQuery):
    await hide_buttons(callback_query=callback_query)

    await callback_query.message.answer(text="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å:")

    first_question_buttons = InlineKeyboardBuilder()
    first_question_buttons.add(
        InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data="first_level_task")
    )
    first_question_buttons.add(
        InlineKeyboardButton(
            text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –±–æ–Ω—É—Å–∞", callback_data="skip_to_2"
        )
    )

    first_question_text = (
        "ü§î–í–æ–ø—Ä–æ—Å: –ê —á—Ç–æ –¥–µ–ª–∞–µ—Ç –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç –∏–ª–∏ —É—Å–ª—É–≥—É –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω—ã–º–∏ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏"
        " –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤?"
    )

    await callback_query.message.answer(
        text=first_question_text,
        reply_markup=first_question_buttons.as_markup(resize_keyboard=True),
    )


# First level task
@first_level_router.callback_query(F.data == "first_level_task")
async def first_answer_handler(callback_query: CallbackQuery):
    await hide_buttons(callback_query=callback_query)

    text = ("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–≤–µ—Ç –Ω–∏–∂–µ –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å–ª–æ–≤ '–ú–æ–π –ø—Ä–æ–¥—É–∫—Ç ...' –∏–ª–∏ '–ú–æ—è —É—Å–ª—É–≥–∞ ...'")
    await callback_query.message.answer(text=text)


@first_level_router.message(F.text.upper().in_(data.FIRST_LEVEL_ANSWER_TRIGGER))
async def get_answer(message: Message):

    await update_user_data(user_id=message.from_user.id, utp=message.text)
    await increment_discount(user_id=message.from_user.id)

    next_button = InlineKeyboardBuilder()
    next_button.add(
        InlineKeyboardButton(text="–î–∞–ª–µ–µ", callback_data="second_level_intro")
    )

    text = (
        "üéÆ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à–∏ –∑–Ω–∞–Ω–∏—è –æ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –¥–∏–∑–∞–π–Ω–µ –∏ –µ–≥–æ –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ –±–∏–∑–Ω–µ—Å –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Ä–∞—Å—Ç–∏. "
        "–ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤—ã–∑–æ–≤—É?"
    )

    await message.answer(
        text=text, reply_markup=next_button.as_markup(resize_keyboard=True)
    )
